@misc{multiprog2020,
 abstract = {Static scheduling of independent, moldable tasks on parallel machines with frequency scaling comprises decisions on core allocation, assignment, frequency scaling and ordering, to meet a deadline and minimize energy consumption. Constraining some of these decisions reduces the solution space, i.e. may increase energy consumption, but may also reduce scheduling time or give the chance to tackle larger task sets. We investigate the influence of different constraints that lead from an unrestricted scheduler via two intermediate steps to the crown scheduler, by presenting integer linear programs for all four schedulers. We compare scheduling time and energy consumption for a benchmark suite of synthetic task sets of different sizes. Our results indicate that the final step towards the crown scheduler -- the execution order constraint -- is responsible for faster scheduling when task sets are small, and lower energy consumption when we deal with large task sets.},
 archiveprefix = {arXiv},
 author = {JÃ¶rg Keller and Sebastian Litzinger},
 eprint = {2006.11062},
 note = {Presented at the 13th International Workshop on Programmability and Architectures for Heterogeneous Multicores, 2020},
 primaryclass = {cs.DC},
 title = {Influence of Incremental Constraints on Energy Consumption and Static Scheduling Time for Moldable Tasks with Deadline},
 url = {https://arxiv.org/pdf/2006.11062},
 year = {2020}
}
